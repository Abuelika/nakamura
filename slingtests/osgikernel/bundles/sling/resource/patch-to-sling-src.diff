--- /Users/ieb/Apache/sling/trunk/bundles/jcr/resource/src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceResolver2.java	2009-09-09 20:20:54.000000000 +0100
+++ src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceResolver2.java	2009-09-25 14:04:17.000000000 +0100
@@ -234,7 +234,7 @@
             log.debug(
                 "resolve: Path {} does not resolve, returning NonExistingResource at {}",
                 absPath, realPathList[0]);
-            res = new NonExistingResource(this, ensureAbsPath(realPathList[0]));
+            res = resolveNonExistingResoruce(ensureAbsPath(realPathList[0]));
         } else {
             log.debug("resolve: Path {} resolves to Resource {}", absPath, res);
         }
@@ -242,6 +242,15 @@
         return res;
     }
 
+    /**
+     * @param jcrResourceResolver2
+     * @param string
+     * @return
+     */
+    protected Resource resolveNonExistingResoruce(String absRealPath) {
+      return new NonExistingResource(this, absRealPath);
+    }
+
     // calls map(HttpServletRequest, String) as map(null, resourcePath)
     public String map(String resourcePath) {
         return map(null, resourcePath);
--- /Users/ieb/Apache/sling/trunk/bundles/jcr/resource/src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceResolverFactoryImpl.java	2009-07-13 21:57:28.000000000 +0100
+++ src/main/java/org/apache/sling/jcr/resource/internal/JcrResourceResolverFactoryImpl.java	2009-09-25 15:45:07.000000000 +0100
@@ -218,7 +218,16 @@
     public ResourceResolver getResourceResolver(Session session) {
         JcrResourceProviderEntry sessionRoot = new JcrResourceProviderEntry(
             session, rootProviderEntry, getJcrResourceTypeProviders());
+        return getResourceResolver(sessionRoot, mapEntries);
+    }
 
+    /**
+     * @param sessionRoot
+     * @param mapEntries2
+     * @return
+     */
+    protected ResourceResolver getResourceResolver(JcrResourceProviderEntry sessionRoot,
+        MapEntries mapEntries2) {
         return new JcrResourceResolver2(sessionRoot, this, mapEntries);
     }
 
@@ -583,6 +592,14 @@
         return repository;
     }
 
+    protected void bindRepository(SlingRepository slingRepository) {
+      this.repository = slingRepository;
+    }
+    
+    protected void unbindRepository(SlingRepository slingRepository) {
+      this.repository = null;
+    }
+
     protected static final class JcrResourceTypeProviderEntry {
         final long serviceId;
 
